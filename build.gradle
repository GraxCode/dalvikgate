plugins {
    id 'java-library'
    id 'eclipse'
}

version = '1.0.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

ext {
    asm_ver = "8.0.1"
    // Defined here since we're technically not an application
    mainClassName = "me.nov.dalvikgate.DexToASM"
}

test {
    useJUnitPlatform()
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Transitive dependency
    compile 'org.smali:dexlib2:2.4.0'
    // Non-transitive. Anyone importing DalvikGate can use their own version of these libraries
    implementation "org.ow2.asm:asm:${asm_ver}"
    implementation "org.ow2.asm:asm-tree:${asm_ver}"
    implementation "org.ow2.asm:asm-analysis:${asm_ver}"
    implementation "org.ow2.asm:asm-util:${asm_ver}"
    implementation 'info.picocli:picocli:4.2.0'
    implementation 'commons-io:commons-io:2.6'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    // Testing
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.6.2")
    testImplementation("org.mockito:mockito-core:3.3.3")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.2")
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': "${project.name}",
                'Implementation-Version': "${project.version}",
                'Main-Class': "${mainClassName}"
    }
    baseName(project.name + '-all')
    from(configurations.compile.collect { entry -> zipTree(entry) }) {
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
        exclude 'module-info.*'
    }
    with jar
}